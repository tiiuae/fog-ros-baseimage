ARG FROM_IMAGE=ros:galactic
ARG FROM_DEPLOY_IMAGE=ros:galactic-ros-core
ARG OVERLAY_WS=/opt/ros/overlay_ws

# multi-stage for caching
FROM $FROM_IMAGE AS cacher

# clone overlay source
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS/src
RUN echo "\
repositories: \n\
    foonathan_memory_vendor: \n\
        type: git \n\
        url: https://github.com/eProsima/foonathan_memory_vendor.git \n\
        version: v1.1.0 \n\
    fastcdr: \n\
        type: git \n\
        url: https://github.com/eProsima/Fast-CDR.git \n\
        version: v1.0.22 \n\
    fastrtps: \n\
        type: git \n\
        url: https://github.com/eProsima/Fast-DDS.git \n\
        version: v2.5.0 \n\
    rmw_fastrtps: \n\
        type: git \n\
        url: https://github.com/eProsima/rmw_fastrtps.git \n\
        version: feature/pkcs11_support-galactic \n\
    rosidl_typesupport_fastrtps: \n\
        type: git \n\
        url: https://github.com/ros2/rosidl_typesupport_fastrtps.git \n\
        version: ${ROS_DISTRO} \n\
" > ../overlay.repos
RUN vcs import ./ < ../overlay.repos

# copy manifests for caching
WORKDIR /opt
# fascdr does not have package.xml so it won't be copied.
RUN mkdir -p /tmp/opt && \
    find ./ -name "package.xml" | \
      xargs cp --parents -t /tmp/opt && \
    cp -r $OVERLAY_WS/src/fastcdr /tmp/$OVERLAY_WS/src || true

# multi-stage for building
FROM $FROM_IMAGE AS builder

# install overlay dependencies
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS
COPY --from=cacher /tmp/$OVERLAY_WS/src ./src
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    apt-get update && rosdep install -y \
      --from-paths \
        src/foonathan_memory_vendor \
        src/fastcdr \
        src/fastrtps \
        src/rmw_fastrtps \
        src/rosidl_typesupport_fastrtps \
      --ignore-src \
    && rm -rf /var/lib/apt/lists/*

# build overlay source
COPY --from=cacher $OVERLAY_WS/src ./src
ARG OVERLAY_MIXINS="release"
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    colcon build \
        --packages-up-to \
          rmw_fastrtps_cpp \
        --mixin $OVERLAY_MIXINS && \
    . $OVERLAY_WS/install/local_setup.sh && \
    colcon build \
        --mixin $OVERLAY_MIXINS

FROM $FROM_DEPLOY_IMAGE AS sros-deploy
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS
COPY --from=builder $OVERLAY_WS/install $OVERLAY_WS/

# source entrypoint setup
ENV OVERLAY_WS $OVERLAY_WS
RUN sed --in-place --expression \
      '$isource "$OVERLAY_WS/setup.bash"' \
      /ros_entrypoint.sh
